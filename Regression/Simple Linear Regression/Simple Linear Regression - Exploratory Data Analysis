{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"NbqR0TMoTQz-"},"outputs":[],"source":["# import libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","\n","from sklearn.linear_model import LinearRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.metrics import mean_absolute_error\n","from sklearn.metrics import mean_absolute_percentage_error\n","\n","import warnings\n","warnings.filterwarnings('ignore')"]},{"cell_type":"markdown","source":["## Data Profiling\n","Data profiling is a process of reviewing the source data, understanding structure, and content interrelationships, and identifying potential for data projects.\n","\n","House Dataset"],"metadata":{"id":"tDHc2lJoY3zF"}},{"cell_type":"code","source":["dataset = pd.read_csv('Housing.csv')\n","dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ILBXFLJFYvdm","executionInfo":{"status":"ok","timestamp":1667016505502,"user_tz":-420,"elapsed":420,"user":{"displayName":"Rokhmah Vira","userId":"01335328698663547714"}},"outputId":"ffcbf790-beb1-4591-c456-a93ead233ce0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      price  area  bedrooms  bathrooms  stories mainroad guestroom basement  \\\n","0  13300000  7420         4          2        3      yes        no       no   \n","1  12250000  8960         4          4        4      yes        no       no   \n","2  12250000  9960         3          2        2      yes        no      yes   \n","3  12215000  7500         4          2        2      yes        no      yes   \n","4  11410000  7420         4          1        2      yes       yes      yes   \n","\n","  hotwaterheating airconditioning  parking prefarea furnishingstatus  \n","0              no             yes        2      yes        furnished  \n","1              no             yes        3       no        furnished  \n","2              no              no        2      yes   semi-furnished  \n","3              no             yes        3      yes        furnished  \n","4              no             yes        2       no        furnished  "],"text/html":["\n","  <div id=\"df-572f9d20-a981-40c9-b227-b3f5f0dca6a0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","      <th>area</th>\n","      <th>bedrooms</th>\n","      <th>bathrooms</th>\n","      <th>stories</th>\n","      <th>mainroad</th>\n","      <th>guestroom</th>\n","      <th>basement</th>\n","      <th>hotwaterheating</th>\n","      <th>airconditioning</th>\n","      <th>parking</th>\n","      <th>prefarea</th>\n","      <th>furnishingstatus</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>13300000</td>\n","      <td>7420</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>furnished</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12250000</td>\n","      <td>8960</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>furnished</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12250000</td>\n","      <td>9960</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>semi-furnished</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12215000</td>\n","      <td>7500</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>3</td>\n","      <td>yes</td>\n","      <td>furnished</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11410000</td>\n","      <td>7420</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>2</td>\n","      <td>no</td>\n","      <td>furnished</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-572f9d20-a981-40c9-b227-b3f5f0dca6a0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-572f9d20-a981-40c9-b227-b3f5f0dca6a0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-572f9d20-a981-40c9-b227-b3f5f0dca6a0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df = dataset[['price','area']]\n","\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"zHl9qCaG7UTX","executionInfo":{"status":"ok","timestamp":1667016877257,"user_tz":-420,"elapsed":8,"user":{"displayName":"Rokhmah Vira","userId":"01335328698663547714"}},"outputId":"c8557ffe-663b-4e04-bd2c-bd6f32c6dab5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      price  area\n","0  13300000  7420\n","1  12250000  8960\n","2  12250000  9960\n","3  12215000  7500\n","4  11410000  7420"],"text/html":["\n","  <div id=\"df-fd6f11e6-447c-4a50-8d7b-072e04f42ed4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","      <th>area</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>13300000</td>\n","      <td>7420</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12250000</td>\n","      <td>8960</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12250000</td>\n","      <td>9960</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12215000</td>\n","      <td>7500</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11410000</td>\n","      <td>7420</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fd6f11e6-447c-4a50-8d7b-072e04f42ed4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fd6f11e6-447c-4a50-8d7b-072e04f42ed4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fd6f11e6-447c-4a50-8d7b-072e04f42ed4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jQHnX8a4ZFtD","executionInfo":{"status":"ok","timestamp":1667016520938,"user_tz":-420,"elapsed":9,"user":{"displayName":"Rokhmah Vira","userId":"01335328698663547714"}},"outputId":"57f45b17-e214-4d77-90f9-7450cf455cf8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 545 entries, 0 to 544\n","Data columns (total 2 columns):\n"," #   Column  Non-Null Count  Dtype\n","---  ------  --------------  -----\n"," 0   price   545 non-null    int64\n"," 1   area    545 non-null    int64\n","dtypes: int64(2)\n","memory usage: 8.6 KB\n"]}]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nDIeoOCvZN_r","executionInfo":{"status":"ok","timestamp":1667016526239,"user_tz":-420,"elapsed":474,"user":{"displayName":"Rokhmah Vira","userId":"01335328698663547714"}},"outputId":"f933174e-1c7e-4207-e7b4-8b4955f716e0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["price    0\n","area     0\n","dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["## Data Cleaning\n","Data cleaning is the process of fixing or removing incorrect, corrupted, incorrectly formatted, duplicate, or incomplete data within a dataset."],"metadata":{"id":"CML5bT0n2fDR"}},{"cell_type":"markdown","source":["In this Simple Linear Regression, the features used are the price and area columns. Where the two columns for the data type are appropriate. Then also no nan values in the row. So in the data cleaning stage there is no data that needs to be cleaned"],"metadata":{"id":"NJ9ooywD2jwF"}},{"cell_type":"markdown","source":["## Exploratory Data Analysis\n","Exploratory Data Analysis refers to the critical process of performing initial investigations on data so as to discover patterns, to spot anomalies, to test hypothesis and to check assumptions with the help of summary statistics and graphical representations."],"metadata":{"id":"mzjIGVoy5UUq"}},{"cell_type":"code","source":["df.describe()"],"metadata":{"id":"ppMiVfE7ZRM8","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1667016538534,"user_tz":-420,"elapsed":6,"user":{"displayName":"Rokhmah Vira","userId":"01335328698663547714"}},"outputId":"3292c0a3-0d88-4567-a25f-28478f1c588e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              price          area\n","count  5.450000e+02    545.000000\n","mean   4.766729e+06   5150.541284\n","std    1.870440e+06   2170.141023\n","min    1.750000e+06   1650.000000\n","25%    3.430000e+06   3600.000000\n","50%    4.340000e+06   4600.000000\n","75%    5.740000e+06   6360.000000\n","max    1.330000e+07  16200.000000"],"text/html":["\n","  <div id=\"df-916e9b7c-9129-4a88-8f9b-ab219327db66\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","      <th>area</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>5.450000e+02</td>\n","      <td>545.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>4.766729e+06</td>\n","      <td>5150.541284</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.870440e+06</td>\n","      <td>2170.141023</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.750000e+06</td>\n","      <td>1650.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>3.430000e+06</td>\n","      <td>3600.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>4.340000e+06</td>\n","      <td>4600.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>5.740000e+06</td>\n","      <td>6360.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.330000e+07</td>\n","      <td>16200.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-916e9b7c-9129-4a88-8f9b-ab219327db66')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-916e9b7c-9129-4a88-8f9b-ab219327db66 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-916e9b7c-9129-4a88-8f9b-ab219327db66');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["sns.distplot(df['area']);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"y530i7WJ7bb4","executionInfo":{"status":"ok","timestamp":1667016686099,"user_tz":-420,"elapsed":622,"user":{"displayName":"Rokhmah Vira","userId":"01335328698663547714"}},"outputId":"6649fe6d-1248-4098-8fff-169d72c92b23"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.distplot(df['price']);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":290},"id":"u5EavjBG7_Mr","executionInfo":{"status":"ok","timestamp":1667016712893,"user_tz":-420,"elapsed":1258,"user":{"displayName":"Rokhmah Vira","userId":"01335328698663547714"}},"outputId":"ff5af450-51df-4dc6-ece2-d8b7a8be4111"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}]}